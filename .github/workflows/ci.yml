name: Run Selenium Tests & View Allure Reports

on:
  workflow_dispatch:  # Allows manual execution from GitHub UI
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Latest ChromeDriver & Matching Chrome
        run: |
          sudo apt update
          sudo apt install -y wget unzip jq

          # Fetch the latest stable ChromeDriver version
          DRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          echo "Installing ChromeDriver version: $DRIVER_VERSION"

          # Debugging - Print API Response
          echo "Fetching ChromeDriver info from API..."
          API_RESPONSE=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json")
          if [[ -z "$API_RESPONSE" || "$API_RESPONSE" == "null" ]]; then
            echo "Error: ChromeDriver API response is empty. Exiting."
            exit 1
          fi
          echo "$API_RESPONSE" | jq .

          # Attempt to fetch ChromeDriver URL
          DRIVER_URL=$(echo "$API_RESPONSE" | jq -r ".channels.Stable.versions[] | select(.version == \"$DRIVER_VERSION\") | .downloads.chromeDriver[] | select(.platform == \"linux64\") | .url")

          if [[ -z "$DRIVER_URL" || "$DRIVER_URL" == "null" ]]; then
            echo "Failed to fetch ChromeDriver download URL from API. Falling back to manual download."
            DRIVER_URL="https://chromedriver.storage.googleapis.com/$DRIVER_VERSION/chromedriver_linux64.zip"
          fi

          wget -q "$DRIVER_URL" -O chromedriver.zip
          unzip chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
          chmod +x /usr/local/bin/chromedriver

          # Fetch corresponding Chrome version
          CHROME_VERSION=$(echo "$API_RESPONSE" | jq -r ".channels.Stable.versions[] | select(.version == \"$DRIVER_VERSION\") | .version")

          if [[ -z "$CHROME_VERSION" || "$CHROME_VERSION" == "null" ]]; then
            echo "No exact Chrome version found for ChromeDriver $DRIVER_VERSION. Using latest stable Chrome."
            sudo apt install -y google-chrome-stable
          else
            echo "Installing Chrome version: $CHROME_VERSION"
            sudo apt install -y google-chrome-stable=$CHROME_VERSION || sudo apt install -y google-chrome-stable
          fi

      - name: Set Chrome Permissions
        run: sudo chmod 777 /usr/bin/google-chrome

      - name: Run Tests with Headless Chrome
        run: mvn clean test -DargLine="--enable-preview"

      - name: Run Tests with Preview Features
        run: mvn clean test -Dmaven.compiler.release=21 -Dmaven.compiler.showWarnings=true -DargLine="--enable-preview"

      - name: Generate Allure Report
        run: mvn allure:report

      - name: Manually Clone Upload-Artifact
        run: |
          mkdir -p $GITHUB_WORKSPACE/actions
          cd $GITHUB_WORKSPACE/actions
          git clone https://github.com/actions/upload-artifact.git

      - name: Upload Allure Report as Artifact
        uses: ./actions/upload-artifact
        with:
          name: allure-report
          path: target/site/allure-maven/
          if-no-files-found: warn

  deploy:
    needs: test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Allure Report
        uses: actions/download-artifact@v3
        with:
          name: allure-report
          path: target/site/allure-maven/

      - name: Deploy Allure Report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: target/site/allure-maven/